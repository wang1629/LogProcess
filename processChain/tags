!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Cache	Cache.java	/^public class Cache<T> {$/;"	c
Cache.addToCache	Cache.java	/^    public void addToCache(T t) {$/;"	m	class:Cache	access:public	signature:(T t)
Cache.getFromCache	Cache.java	/^    public T getFromCache(T t, CompareByKey<T> compareObj) {$/;"	m	class:Cache	access:public	signature:(T t, CompareByKey<T> compareObj)
Cache.hasMatch	Cache.java	/^    public T hasMatch(T t, MatchFunction<T> matchFunc) {$/;"	m	class:Cache	access:public	signature:(T t, MatchFunction<T> matchFunc)
Cache.list	Cache.java	/^    private List<T> list = new LinkedList<T>();$/;"	f	class:Cache	file:	access:private
CompareByKey	Cache.java	/^interface CompareByKey<T> {$/;"	i
CompareByKey.compare	Cache.java	/^    public boolean compare(T t1, T t2);$/;"	m	interface:CompareByKey	access:public	signature:(T t1, T t2)
END	Entry.java	/^    public static int END = 2;$/;"	f	class:Entry	access:public
Entry	Entry.java	/^    public Entry() { }$/;"	m	class:Entry	access:public	signature:()
Entry	Entry.java	/^    public Entry(String counter, long timestamp, int traceFlag, String requestID) {$/;"	m	class:Entry	access:public	signature:(String counter, long timestamp, int traceFlag, String requestID)
Entry	Entry.java	/^    public Entry(String entryLine) {$/;"	m	class:Entry	access:public	signature:(String entryLine)
Entry	Entry.java	/^public class Entry {$/;"	c
Entry.END	Entry.java	/^    public static int END = 2;$/;"	f	class:Entry	access:public
Entry.Entry	Entry.java	/^    public Entry() { }$/;"	m	class:Entry	access:public	signature:()
Entry.Entry	Entry.java	/^    public Entry(String counter, long timestamp, int traceFlag, String requestID) {$/;"	m	class:Entry	access:public	signature:(String counter, long timestamp, int traceFlag, String requestID)
Entry.Entry	Entry.java	/^    public Entry(String entryLine) {$/;"	m	class:Entry	access:public	signature:(String entryLine)
Entry.SINGLE	Entry.java	/^    public static int SINGLE = 3;$/;"	f	class:Entry	access:public
Entry.START	Entry.java	/^    public static int START = 1;$/;"	f	class:Entry	access:public
Entry.count	Entry.java	/^    static int count = 0;$/;"	f	class:Entry	access:default
Entry.counter	Entry.java	/^    private String counter;$/;"	f	class:Entry	file:	access:private
Entry.cpuUtilization	Entry.java	/^    public String cpuUtilization;$/;"	f	class:Entry	access:public
Entry.getCounter	Entry.java	/^    public String getCounter() {$/;"	m	class:Entry	access:public	signature:()
Entry.getRequestID	Entry.java	/^    public String getRequestID() {$/;"	m	class:Entry	access:public	signature:()
Entry.getTimestamp	Entry.java	/^    public long getTimestamp() {$/;"	m	class:Entry	access:public	signature:()
Entry.getTraceFlag	Entry.java	/^    public int getTraceFlag() {$/;"	m	class:Entry	access:public	signature:()
Entry.hostname	Entry.java	/^    public String hostname;$/;"	f	class:Entry	access:public
Entry.parseFrom	Entry.java	/^    public void parseFrom(String entryLine) {$/;"	m	class:Entry	access:public	signature:(String entryLine)
Entry.prefixTag	Entry.java	/^    public String prefixTag;$/;"	f	class:Entry	access:public
Entry.processID	Entry.java	/^    public String processID;$/;"	f	class:Entry	access:public
Entry.requestID	Entry.java	/^    private String requestID = "";$/;"	f	class:Entry	file:	access:private
Entry.setCounter	Entry.java	/^    public void setCounter(String counter) {$/;"	m	class:Entry	access:public	signature:(String counter)
Entry.setRequestId	Entry.java	/^    public void setRequestId(String requestID) {$/;"	m	class:Entry	access:public	signature:(String requestID)
Entry.setTimestamp	Entry.java	/^    public void setTimestamp(long timestamp) {$/;"	m	class:Entry	access:public	signature:(long timestamp)
Entry.setTraceFlag	Entry.java	/^    public void setTraceFlag(int traceFlag) {$/;"	m	class:Entry	access:public	signature:(int traceFlag)
Entry.timestamp	Entry.java	/^    private long timestamp;$/;"	f	class:Entry	file:	access:private
Entry.toString	Entry.java	/^    public String toString() {$/;"	m	class:Entry	access:public	signature:()
Entry.traceFlag	Entry.java	/^    private int traceFlag;$/;"	f	class:Entry	file:	access:private
EntryProcessor	EntryProcessor.java	/^public class EntryProcessor {$/;"	c
EntryProcessor.applyMatch	EntryProcessor.java	/^    private boolean applyMatch(Entry e1, Entry e2) {$/;"	m	class:EntryProcessor	file:	access:private	signature:(Entry e1, Entry e2)
EntryProcessor.cache	EntryProcessor.java	/^    private Cache<Entry> cache = new Cache<Entry>();$/;"	f	class:EntryProcessor	file:	access:private
EntryProcessor.generateStepResult	EntryProcessor.java	/^    public StepResult generateStepResult(Entry e1, Entry e2) {$/;"	m	class:EntryProcessor	access:public	signature:(Entry e1, Entry e2)
EntryProcessor.id	EntryProcessor.java	/^    public int id; \/\/ for test$/;"	f	class:EntryProcessor	access:public
EntryProcessor.matchFunction	EntryProcessor.java	/^    private MatchFunction<Entry> matchFunction;$/;"	f	class:EntryProcessor	file:	access:private
EntryProcessor.receiveNewEntry	EntryProcessor.java	/^    public StepResult receiveNewEntry(Entry entry) {$/;"	m	class:EntryProcessor	access:public	signature:(Entry entry)
EntryProcessor.resCount	EntryProcessor.java	/^    static int resCount = 0; \/\/ for test$/;"	f	class:EntryProcessor	access:default
EntryProcessor.setMatchFunction	EntryProcessor.java	/^    public void setMatchFunction(MatchFunction<Entry> matchFunction) {$/;"	m	class:EntryProcessor	access:public	signature:(MatchFunction<Entry> matchFunction)
EntryProcessor.topHierarchyStepResult	EntryProcessor.java	/^    private LinkedList<HierarchyStepResult> topHierarchyStepResult;$/;"	f	class:EntryProcessor	file:	access:private
EntryProcessorManager	EntryProcessorManager.java	/^public class EntryProcessorManager<F> {$/;"	c
EntryProcessorManager.check	EntryProcessorManager.java	/^    public boolean check() {$/;"	m	class:EntryProcessorManager	access:public	signature:()
EntryProcessorManager.dispatch	EntryProcessorManager.java	/^    public EntryProcessor dispatch(Entry entry) {$/;"	m	class:EntryProcessorManager	access:public	signature:(Entry entry)
EntryProcessorManager.epMap	EntryProcessorManager.java	/^    private Map<F, EntryProcessor>  epMap = new HashMap<F, EntryProcessor>();$/;"	f	class:EntryProcessorManager	file:	access:private
EntryProcessorManager.groupBy	EntryProcessorManager.java	/^    private GroupBy<Entry, F>   groupBy;$/;"	f	class:EntryProcessorManager	file:	access:private
EntryProcessorManager.idMap	EntryProcessorManager.java	/^    private Map<Integer, F>  idMap = new HashMap<Integer, F>(); $/;"	f	class:EntryProcessorManager	file:	access:private
EntryProcessorManager.sequenceNuber	EntryProcessorManager.java	/^    private static int sequenceNuber = 1;$/;"	f	class:EntryProcessorManager	file:	access:private
EntryProcessorManager.setGroupBy	EntryProcessorManager.java	/^    public void setGroupBy(GroupBy<Entry, F> groupBy) {$/;"	m	class:EntryProcessorManager	access:public	signature:(GroupBy<Entry, F> groupBy)
FakeLogFeedThread	FakeLogFeedThread.java	/^    public FakeLogFeedThread(LogStream<Entry> logStream) {$/;"	m	class:FakeLogFeedThread	access:public	signature:(LogStream<Entry> logStream)
FakeLogFeedThread	FakeLogFeedThread.java	/^public class FakeLogFeedThread extends FeedThread {$/;"	c	inherits:FeedThread
FakeLogFeedThread.FakeLogFeedThread	FakeLogFeedThread.java	/^    public FakeLogFeedThread(LogStream<Entry> logStream) {$/;"	m	class:FakeLogFeedThread	access:public	signature:(LogStream<Entry> logStream)
FakeLogFeedThread.mainAAA	FakeLogFeedThread.java	/^    public static void mainAAA(String args[]) {$/;"	m	class:FakeLogFeedThread	access:public	signature:(String args[])
FakeLogFeedThread.masterLogPath	FakeLogFeedThread.java	/^    String masterLogPath = "\/home\/wang\/work\/LPS\/LogProcess\/fakeServer\/res\/master.log";$/;"	f	class:FakeLogFeedThread	access:default
FakeLogFeedThread.masterReader	FakeLogFeedThread.java	/^    BufferedReader masterReader;$/;"	f	class:FakeLogFeedThread	access:default
FakeLogFeedThread.openLogFile	FakeLogFeedThread.java	/^    public void openLogFile() {$/;"	m	class:FakeLogFeedThread	access:public	signature:()
FakeLogFeedThread.run	FakeLogFeedThread.java	/^    public void run() {$/;"	m	class:FakeLogFeedThread	access:public	signature:()
FakeLogFeedThread.sqrtReader	FakeLogFeedThread.java	/^    BufferedReader sqrtReader;$/;"	f	class:FakeLogFeedThread	access:default
FakeLogFeedThread.sqrtWorkerLogPath	FakeLogFeedThread.java	/^    String sqrtWorkerLogPath = "\/home\/wang\/work\/LPS\/LogProcess\/fakeServer\/res\/sqrtWorker.log";$/;"	f	class:FakeLogFeedThread	access:default
FakeLogFeedThread.sumReader	FakeLogFeedThread.java	/^    BufferedReader sumReader;$/;"	f	class:FakeLogFeedThread	access:default
FakeLogFeedThread.sumWorkerLogPath	FakeLogFeedThread.java	/^    String sumWorkerLogPath = "\/home\/wang\/work\/LPS\/LogProcess\/fakeServer\/res\/sumWorker.log";$/;"	f	class:FakeLogFeedThread	access:default
FeedThread	FeedThread.java	/^    public FeedThread(LogStream<Entry> logStream) {$/;"	m	class:FeedThread	access:public	signature:(LogStream<Entry> logStream)
FeedThread	FeedThread.java	/^public class FeedThread extends Thread {$/;"	c	inherits:Thread
FeedThread.FeedThread	FeedThread.java	/^    public FeedThread(LogStream<Entry> logStream) {$/;"	m	class:FeedThread	access:public	signature:(LogStream<Entry> logStream)
FeedThread.buildEntryArray	FeedThread.java	/^    public void buildEntryArray() {$/;"	m	class:FeedThread	access:public	signature:()
FeedThread.buildEntryArrayRandom	FeedThread.java	/^    public void buildEntryArrayRandom() {$/;"	m	class:FeedThread	access:public	signature:()
FeedThread.e	FeedThread.java	/^    Entry e[] = new Entry[17];$/;"	f	class:FeedThread	access:default
FeedThread.e1	FeedThread.java	/^    Entry e1  = new Entry("c1", 1001, Entry.START, "1");$/;"	f	class:FeedThread	access:default
FeedThread.e10	FeedThread.java	/^    Entry e10 = new Entry("c2", 2002, Entry.START, "2");$/;"	f	class:FeedThread	access:default
FeedThread.e11	FeedThread.java	/^    Entry e11 = new Entry("c2", 2003, Entry.END,   "2");$/;"	f	class:FeedThread	access:default
FeedThread.e12	FeedThread.java	/^    Entry e12 = new Entry("c1", 2004, Entry.END,   "2");$/;"	f	class:FeedThread	access:default
FeedThread.e13	FeedThread.java	/^    Entry e13 = new Entry("c3", 2005, Entry.START, "2");$/;"	f	class:FeedThread	access:default
FeedThread.e14	FeedThread.java	/^    Entry e14 = new Entry("c3", 2006, Entry.END,   "2");$/;"	f	class:FeedThread	access:default
FeedThread.e15	FeedThread.java	/^    Entry e15 = new Entry("c4", 2007, Entry.START, "2");$/;"	f	class:FeedThread	access:default
FeedThread.e16	FeedThread.java	/^    Entry e16 = new Entry("c4", 2008, Entry.END,   "2");$/;"	f	class:FeedThread	access:default
FeedThread.e2	FeedThread.java	/^    Entry e2  = new Entry("c2", 1002, Entry.START, "1");$/;"	f	class:FeedThread	access:default
FeedThread.e3	FeedThread.java	/^    Entry e3  = new Entry("c2", 1003, Entry.END,   "1");$/;"	f	class:FeedThread	access:default
FeedThread.e4	FeedThread.java	/^    Entry e4  = new Entry("c1", 1004, Entry.END,   "1");$/;"	f	class:FeedThread	access:default
FeedThread.e5	FeedThread.java	/^    Entry e5  = new Entry("c3", 1005, Entry.START, "1");$/;"	f	class:FeedThread	access:default
FeedThread.e6	FeedThread.java	/^    Entry e6  = new Entry("c3", 1006, Entry.END,   "1");$/;"	f	class:FeedThread	access:default
FeedThread.e7	FeedThread.java	/^    Entry e7  = new Entry("c4", 1007, Entry.START, "1");$/;"	f	class:FeedThread	access:default
FeedThread.e8	FeedThread.java	/^    Entry e8  = new Entry("c4", 1008, Entry.END,   "1");$/;"	f	class:FeedThread	access:default
FeedThread.e9	FeedThread.java	/^    Entry e9  = new Entry("c1", 2001, Entry.START, "2");$/;"	f	class:FeedThread	access:default
FeedThread.logStream	FeedThread.java	/^    LogStream<Entry> logStream;$/;"	f	class:FeedThread	access:default
FeedThread.run	FeedThread.java	/^    public void run() {$/;"	m	class:FeedThread	access:public	signature:()
Filter	Filter.java	/^public interface Filter<T> {$/;"	i
Filter.filter	Filter.java	/^    public boolean filter(T t);$/;"	m	interface:Filter	access:public	signature:(T t)
FilterChain	FilterChain.java	/^public class FilterChain<T> {$/;"	c
FilterChain.addNewFilter	FilterChain.java	/^    public void addNewFilter(Filter<T> filter) {$/;"	m	class:FilterChain	access:public	signature:(Filter<T> filter)
FilterChain.apply	FilterChain.java	/^    public boolean apply(T t) {$/;"	m	class:FilterChain	access:public	signature:(T t)
FilterChain.filterChain	FilterChain.java	/^    private LinkedList< Filter<T> > filterChain = new LinkedList< Filter<T> >();$/;"	f	class:FilterChain	file:	access:private
FilterChain.removeFilter	FilterChain.java	/^    public boolean removeFilter(Filter<T> filter) {$/;"	m	class:FilterChain	access:public	signature:(Filter<T> filter)
GroupBy	GroupBy.java	/^public interface GroupBy<E, F> {  \/* E for Entry, F for Field *\/$/;"	i
GroupBy.applyGroupBy	GroupBy.java	/^    public F applyGroupBy(E entry);$/;"	m	interface:GroupBy	access:public	signature:(E entry)
HierarchyStepResult	HierarchyStepResult.java	/^public class HierarchyStepResult extends StepResult {$/;"	c	inherits:StepResult
HierarchyStepResult.addSubStep	HierarchyStepResult.java	/^    public void addSubStep(HierarchyStepResult subStep) {$/;"	m	class:HierarchyStepResult	access:public	signature:(HierarchyStepResult subStep)
HierarchyStepResult.hierarchyStepList	HierarchyStepResult.java	/^    private LinkedList<HierarchyStepResult> hierarchyStepList = new LinkedList<HierarchyStepResult>();$/;"	f	class:HierarchyStepResult	file:	access:private
LogStream	LogStream.java	/^public class LogStream<T> {$/;"	c
LogStream.next	LogStream.java	/^    public T next() {$/;"	m	class:LogStream	access:public	signature:()
LogStream.queue	LogStream.java	/^    private BlockingQueue<T> queue = new ArrayBlockingQueue<T>(1024);$/;"	f	class:LogStream	file:	access:private
LogStream.receiveNew	LogStream.java	/^    public void receiveNew(T t) {$/;"	m	class:LogStream	access:public	signature:(T t)
MatchFunction	MatchFunction.java	/^public interface MatchFunction<T> {$/;"	i
MatchFunction.match	MatchFunction.java	/^    public boolean match(T t1, T t2);$/;"	m	interface:MatchFunction	access:public	signature:(T t1, T t2)
MyFilter	TestProcessChain.java	/^class MyFilter implements Filter<Entry> {$/;"	c	inherits:Filter
MyFilter.filter	TestProcessChain.java	/^    public boolean filter(Entry t) {$/;"	m	class:MyFilter	access:public	signature:(Entry t)
MyGroupBy	TestProcessChain.java	/^class MyGroupBy implements GroupBy<Entry, String> {$/;"	c	inherits:GroupBy
MyGroupBy.applyGroupBy	TestProcessChain.java	/^    public String applyGroupBy(Entry entry) {$/;"	m	class:MyGroupBy	access:public	signature:(Entry entry)
MyMatch	TestProcessChain.java	/^class MyMatch implements MatchFunction<Entry> {$/;"	c	inherits:MatchFunction
MyMatch.match	TestProcessChain.java	/^    public boolean match(Entry e1, Entry e2) {$/;"	m	class:MyMatch	access:public	signature:(Entry e1, Entry e2)
ProcessChain	ProcessChain.java	/^class ProcessChain {$/;"	c
ProcessChain.addFilter	ProcessChain.java	/^    public void addFilter(Filter<Entry> filter) { $/;"	m	class:ProcessChain	access:public	signature:(Filter<Entry> filter)
ProcessChain.check	ProcessChain.java	/^    public boolean check() {$/;"	m	class:ProcessChain	access:public	signature:()
ProcessChain.dispatch	ProcessChain.java	/^    public EntryProcessor dispatch(Entry entry) {$/;"	m	class:ProcessChain	access:public	signature:(Entry entry)
ProcessChain.epManager	ProcessChain.java	/^    private EntryProcessorManager<?>  epManager;  \/\/TODO$/;"	f	class:ProcessChain	file:	access:private
ProcessChain.filterChain	ProcessChain.java	/^    private FilterChain<Entry>  filterChain;$/;"	f	class:ProcessChain	file:	access:private
ProcessChain.filterCount	ProcessChain.java	/^    int filterCount = 0;$/;"	f	class:ProcessChain	access:default
ProcessChain.filterCountKeep	ProcessChain.java	/^    int filterCountKeep = 0;$/;"	f	class:ProcessChain	access:default
ProcessChain.init	ProcessChain.java	/^    public void init() {$/;"	m	class:ProcessChain	access:public	signature:()
ProcessChain.logStream	ProcessChain.java	/^    private LogStream<Entry>    logStream;$/;"	f	class:ProcessChain	file:	access:private
ProcessChain.matchFunction	ProcessChain.java	/^    private MatchFunction<Entry> matchFunction;$/;"	f	class:ProcessChain	file:	access:private
ProcessChain.process	ProcessChain.java	/^    public void process() {$/;"	m	class:ProcessChain	access:public	signature:()
ProcessChain.setEntryProcessorMananger	ProcessChain.java	/^    public void setEntryProcessorMananger(EntryProcessorManager<?> epManager) {$/;"	m	class:ProcessChain	access:public	signature:(EntryProcessorManager<?> epManager)
ProcessChain.setLogStream	ProcessChain.java	/^    public void setLogStream(LogStream<Entry> logStream) {$/;"	m	class:ProcessChain	access:public	signature:(LogStream<Entry> logStream)
ProcessChain.setMatchFunction	ProcessChain.java	/^    public void setMatchFunction(MatchFunction<Entry> myMatch) {$/;"	m	class:ProcessChain	access:public	signature:(MatchFunction<Entry> myMatch)
SINGLE	Entry.java	/^    public static int SINGLE = 3;$/;"	f	class:Entry	access:public
START	Entry.java	/^    public static int START = 1;$/;"	f	class:Entry	access:public
StepResult	StepResult.java	/^public class StepResult {$/;"	c
StepResult.counter	StepResult.java	/^    public String counter;$/;"	f	class:StepResult	access:public
StepResult.endTime	StepResult.java	/^    public long endTime;$/;"	f	class:StepResult	access:public
StepResult.equals	StepResult.java	/^    public boolean equals(StepResult step) {$/;"	m	class:StepResult	access:public	signature:(StepResult step)
StepResult.interval	StepResult.java	/^    public long interval() {$/;"	m	class:StepResult	access:public	signature:()
StepResult.startTime	StepResult.java	/^    public long startTime;$/;"	f	class:StepResult	access:public
StepResult.toString	StepResult.java	/^    public String toString() {$/;"	m	class:StepResult	access:public	signature:()
Test	Test.java	/^public class Test {$/;"	c
Test.main	Test.java	/^    public static void main(String args[]) {$/;"	m	class:Test	access:public	signature:(String args[])
TestEP	TestEP.java	/^public class TestEP {$/;"	c
TestEP.buildEntryArray	TestEP.java	/^    public static void buildEntryArray() {$/;"	m	class:TestEP	access:public	signature:()
TestEP.buildEntryArrayRandom	TestEP.java	/^    public static void buildEntryArrayRandom() {$/;"	m	class:TestEP	access:public	signature:()
TestEP.e	TestEP.java	/^    static Entry e[] = new Entry[17];$/;"	f	class:TestEP	access:default
TestEP.e1	TestEP.java	/^    static Entry e1  = new Entry("c1", 1001, Entry.START, 1);$/;"	f	class:TestEP	access:default
TestEP.e10	TestEP.java	/^    static Entry e10 = new Entry("c2", 2002, Entry.START, 2);$/;"	f	class:TestEP	access:default
TestEP.e11	TestEP.java	/^    static Entry e11 = new Entry("c2", 2003, Entry.END,   2);$/;"	f	class:TestEP	access:default
TestEP.e12	TestEP.java	/^    static Entry e12 = new Entry("c1", 2004, Entry.END,   2);$/;"	f	class:TestEP	access:default
TestEP.e13	TestEP.java	/^    static Entry e13 = new Entry("c3", 2005, Entry.START, 2);$/;"	f	class:TestEP	access:default
TestEP.e14	TestEP.java	/^    static Entry e14 = new Entry("c3", 2006, Entry.END,   2);$/;"	f	class:TestEP	access:default
TestEP.e15	TestEP.java	/^    static Entry e15 = new Entry("c4", 2007, Entry.START, 2);$/;"	f	class:TestEP	access:default
TestEP.e16	TestEP.java	/^    static Entry e16 = new Entry("c4", 2008, Entry.END,   2);$/;"	f	class:TestEP	access:default
TestEP.e2	TestEP.java	/^    static Entry e2  = new Entry("c2", 1002, Entry.START, 1);$/;"	f	class:TestEP	access:default
TestEP.e3	TestEP.java	/^    static Entry e3  = new Entry("c2", 1003, Entry.END,   1);$/;"	f	class:TestEP	access:default
TestEP.e4	TestEP.java	/^    static Entry e4  = new Entry("c1", 1004, Entry.END,   1);$/;"	f	class:TestEP	access:default
TestEP.e5	TestEP.java	/^    static Entry e5  = new Entry("c3", 1005, Entry.START, 1);$/;"	f	class:TestEP	access:default
TestEP.e6	TestEP.java	/^    static Entry e6  = new Entry("c3", 1006, Entry.END,   1);$/;"	f	class:TestEP	access:default
TestEP.e7	TestEP.java	/^    static Entry e7  = new Entry("c4", 1007, Entry.START, 1);$/;"	f	class:TestEP	access:default
TestEP.e8	TestEP.java	/^    static Entry e8  = new Entry("c4", 1008, Entry.END,   1);$/;"	f	class:TestEP	access:default
TestEP.e9	TestEP.java	/^    static Entry e9  = new Entry("c1", 2001, Entry.START, 2);$/;"	f	class:TestEP	access:default
TestEP.main	TestEP.java	/^    public static void main(String args[]) {$/;"	m	class:TestEP	access:public	signature:(String args[])
TestEP.testEP	TestEP.java	/^    public static void testEP() {$/;"	m	class:TestEP	access:public	signature:()
TestEP.testEPRandom	TestEP.java	/^    public static void testEPRandom() {$/;"	m	class:TestEP	access:public	signature:()
TestEP.testMatch	TestEP.java	/^    public static void testMatch() {$/;"	m	class:TestEP	access:public	signature:()
TestEP.testMatch	TestEP.java	/^    public static void testMatch(int i, int j) {$/;"	m	class:TestEP	access:public	signature:(int i, int j)
TestHierarchy	TestHierarchy.java	/^public class TestHierarchy {$/;"	c
TestHierarchy.main	TestHierarchy.java	/^    public static void main(String args[]) {$/;"	m	class:TestHierarchy	access:public	signature:(String args[])
TestProcessChain	TestProcessChain.java	/^public class TestProcessChain {$/;"	c
TestProcessChain.logStream	TestProcessChain.java	/^    static LogStream<Entry> logStream = new LogStream<Entry>();;$/;"	f	class:TestProcessChain	access:default
TestProcessChain.main	TestProcessChain.java	/^    public static void main(String args[]) {$/;"	m	class:TestProcessChain	access:public	signature:(String args[])
addFilter	ProcessChain.java	/^    public void addFilter(Filter<Entry> filter) { $/;"	m	class:ProcessChain	access:public	signature:(Filter<Entry> filter)
addNewFilter	FilterChain.java	/^    public void addNewFilter(Filter<T> filter) {$/;"	m	class:FilterChain	access:public	signature:(Filter<T> filter)
addSubStep	HierarchyStepResult.java	/^    public void addSubStep(HierarchyStepResult subStep) {$/;"	m	class:HierarchyStepResult	access:public	signature:(HierarchyStepResult subStep)
addToCache	Cache.java	/^    public void addToCache(T t) {$/;"	m	class:Cache	access:public	signature:(T t)
apply	FilterChain.java	/^    public boolean apply(T t) {$/;"	m	class:FilterChain	access:public	signature:(T t)
applyGroupBy	GroupBy.java	/^    public F applyGroupBy(E entry);$/;"	m	interface:GroupBy	access:public	signature:(E entry)
applyGroupBy	TestProcessChain.java	/^    public String applyGroupBy(Entry entry) {$/;"	m	class:MyGroupBy	access:public	signature:(Entry entry)
applyMatch	EntryProcessor.java	/^    private boolean applyMatch(Entry e1, Entry e2) {$/;"	m	class:EntryProcessor	file:	access:private	signature:(Entry e1, Entry e2)
buildEntryArray	FeedThread.java	/^    public void buildEntryArray() {$/;"	m	class:FeedThread	access:public	signature:()
buildEntryArray	TestEP.java	/^    public static void buildEntryArray() {$/;"	m	class:TestEP	access:public	signature:()
buildEntryArrayRandom	FeedThread.java	/^    public void buildEntryArrayRandom() {$/;"	m	class:FeedThread	access:public	signature:()
buildEntryArrayRandom	TestEP.java	/^    public static void buildEntryArrayRandom() {$/;"	m	class:TestEP	access:public	signature:()
cache	EntryProcessor.java	/^    private Cache<Entry> cache = new Cache<Entry>();$/;"	f	class:EntryProcessor	file:	access:private
check	EntryProcessorManager.java	/^    public boolean check() {$/;"	m	class:EntryProcessorManager	access:public	signature:()
check	ProcessChain.java	/^    public boolean check() {$/;"	m	class:ProcessChain	access:public	signature:()
compare	Cache.java	/^    public boolean compare(T t1, T t2);$/;"	m	interface:CompareByKey	access:public	signature:(T t1, T t2)
count	Entry.java	/^    static int count = 0;$/;"	f	class:Entry	access:default
counter	Entry.java	/^    private String counter;$/;"	f	class:Entry	file:	access:private
counter	StepResult.java	/^    public String counter;$/;"	f	class:StepResult	access:public
cpuUtilization	Entry.java	/^    public String cpuUtilization;$/;"	f	class:Entry	access:public
dispatch	EntryProcessorManager.java	/^    public EntryProcessor dispatch(Entry entry) {$/;"	m	class:EntryProcessorManager	access:public	signature:(Entry entry)
dispatch	ProcessChain.java	/^    public EntryProcessor dispatch(Entry entry) {$/;"	m	class:ProcessChain	access:public	signature:(Entry entry)
e	FeedThread.java	/^    Entry e[] = new Entry[17];$/;"	f	class:FeedThread	access:default
e	TestEP.java	/^    static Entry e[] = new Entry[17];$/;"	f	class:TestEP	access:default
e1	FeedThread.java	/^    Entry e1  = new Entry("c1", 1001, Entry.START, "1");$/;"	f	class:FeedThread	access:default
e1	TestEP.java	/^    static Entry e1  = new Entry("c1", 1001, Entry.START, 1);$/;"	f	class:TestEP	access:default
e10	FeedThread.java	/^    Entry e10 = new Entry("c2", 2002, Entry.START, "2");$/;"	f	class:FeedThread	access:default
e10	TestEP.java	/^    static Entry e10 = new Entry("c2", 2002, Entry.START, 2);$/;"	f	class:TestEP	access:default
e11	FeedThread.java	/^    Entry e11 = new Entry("c2", 2003, Entry.END,   "2");$/;"	f	class:FeedThread	access:default
e11	TestEP.java	/^    static Entry e11 = new Entry("c2", 2003, Entry.END,   2);$/;"	f	class:TestEP	access:default
e12	FeedThread.java	/^    Entry e12 = new Entry("c1", 2004, Entry.END,   "2");$/;"	f	class:FeedThread	access:default
e12	TestEP.java	/^    static Entry e12 = new Entry("c1", 2004, Entry.END,   2);$/;"	f	class:TestEP	access:default
e13	FeedThread.java	/^    Entry e13 = new Entry("c3", 2005, Entry.START, "2");$/;"	f	class:FeedThread	access:default
e13	TestEP.java	/^    static Entry e13 = new Entry("c3", 2005, Entry.START, 2);$/;"	f	class:TestEP	access:default
e14	FeedThread.java	/^    Entry e14 = new Entry("c3", 2006, Entry.END,   "2");$/;"	f	class:FeedThread	access:default
e14	TestEP.java	/^    static Entry e14 = new Entry("c3", 2006, Entry.END,   2);$/;"	f	class:TestEP	access:default
e15	FeedThread.java	/^    Entry e15 = new Entry("c4", 2007, Entry.START, "2");$/;"	f	class:FeedThread	access:default
e15	TestEP.java	/^    static Entry e15 = new Entry("c4", 2007, Entry.START, 2);$/;"	f	class:TestEP	access:default
e16	FeedThread.java	/^    Entry e16 = new Entry("c4", 2008, Entry.END,   "2");$/;"	f	class:FeedThread	access:default
e16	TestEP.java	/^    static Entry e16 = new Entry("c4", 2008, Entry.END,   2);$/;"	f	class:TestEP	access:default
e2	FeedThread.java	/^    Entry e2  = new Entry("c2", 1002, Entry.START, "1");$/;"	f	class:FeedThread	access:default
e2	TestEP.java	/^    static Entry e2  = new Entry("c2", 1002, Entry.START, 1);$/;"	f	class:TestEP	access:default
e3	FeedThread.java	/^    Entry e3  = new Entry("c2", 1003, Entry.END,   "1");$/;"	f	class:FeedThread	access:default
e3	TestEP.java	/^    static Entry e3  = new Entry("c2", 1003, Entry.END,   1);$/;"	f	class:TestEP	access:default
e4	FeedThread.java	/^    Entry e4  = new Entry("c1", 1004, Entry.END,   "1");$/;"	f	class:FeedThread	access:default
e4	TestEP.java	/^    static Entry e4  = new Entry("c1", 1004, Entry.END,   1);$/;"	f	class:TestEP	access:default
e5	FeedThread.java	/^    Entry e5  = new Entry("c3", 1005, Entry.START, "1");$/;"	f	class:FeedThread	access:default
e5	TestEP.java	/^    static Entry e5  = new Entry("c3", 1005, Entry.START, 1);$/;"	f	class:TestEP	access:default
e6	FeedThread.java	/^    Entry e6  = new Entry("c3", 1006, Entry.END,   "1");$/;"	f	class:FeedThread	access:default
e6	TestEP.java	/^    static Entry e6  = new Entry("c3", 1006, Entry.END,   1);$/;"	f	class:TestEP	access:default
e7	FeedThread.java	/^    Entry e7  = new Entry("c4", 1007, Entry.START, "1");$/;"	f	class:FeedThread	access:default
e7	TestEP.java	/^    static Entry e7  = new Entry("c4", 1007, Entry.START, 1);$/;"	f	class:TestEP	access:default
e8	FeedThread.java	/^    Entry e8  = new Entry("c4", 1008, Entry.END,   "1");$/;"	f	class:FeedThread	access:default
e8	TestEP.java	/^    static Entry e8  = new Entry("c4", 1008, Entry.END,   1);$/;"	f	class:TestEP	access:default
e9	FeedThread.java	/^    Entry e9  = new Entry("c1", 2001, Entry.START, "2");$/;"	f	class:FeedThread	access:default
e9	TestEP.java	/^    static Entry e9  = new Entry("c1", 2001, Entry.START, 2);$/;"	f	class:TestEP	access:default
endTime	StepResult.java	/^    public long endTime;$/;"	f	class:StepResult	access:public
epManager	ProcessChain.java	/^    private EntryProcessorManager<?>  epManager;  \/\/TODO$/;"	f	class:ProcessChain	file:	access:private
epMap	EntryProcessorManager.java	/^    private Map<F, EntryProcessor>  epMap = new HashMap<F, EntryProcessor>();$/;"	f	class:EntryProcessorManager	file:	access:private
equals	StepResult.java	/^    public boolean equals(StepResult step) {$/;"	m	class:StepResult	access:public	signature:(StepResult step)
filter	Filter.java	/^    public boolean filter(T t);$/;"	m	interface:Filter	access:public	signature:(T t)
filter	TestProcessChain.java	/^    public boolean filter(Entry t) {$/;"	m	class:MyFilter	access:public	signature:(Entry t)
filterChain	FilterChain.java	/^    private LinkedList< Filter<T> > filterChain = new LinkedList< Filter<T> >();$/;"	f	class:FilterChain	file:	access:private
filterChain	ProcessChain.java	/^    private FilterChain<Entry>  filterChain;$/;"	f	class:ProcessChain	file:	access:private
filterCount	ProcessChain.java	/^    int filterCount = 0;$/;"	f	class:ProcessChain	access:default
filterCountKeep	ProcessChain.java	/^    int filterCountKeep = 0;$/;"	f	class:ProcessChain	access:default
generateStepResult	EntryProcessor.java	/^    public StepResult generateStepResult(Entry e1, Entry e2) {$/;"	m	class:EntryProcessor	access:public	signature:(Entry e1, Entry e2)
getCounter	Entry.java	/^    public String getCounter() {$/;"	m	class:Entry	access:public	signature:()
getFromCache	Cache.java	/^    public T getFromCache(T t, CompareByKey<T> compareObj) {$/;"	m	class:Cache	access:public	signature:(T t, CompareByKey<T> compareObj)
getRequestID	Entry.java	/^    public String getRequestID() {$/;"	m	class:Entry	access:public	signature:()
getTimestamp	Entry.java	/^    public long getTimestamp() {$/;"	m	class:Entry	access:public	signature:()
getTraceFlag	Entry.java	/^    public int getTraceFlag() {$/;"	m	class:Entry	access:public	signature:()
groupBy	EntryProcessorManager.java	/^    private GroupBy<Entry, F>   groupBy;$/;"	f	class:EntryProcessorManager	file:	access:private
hasMatch	Cache.java	/^    public T hasMatch(T t, MatchFunction<T> matchFunc) {$/;"	m	class:Cache	access:public	signature:(T t, MatchFunction<T> matchFunc)
hierarchyStepList	HierarchyStepResult.java	/^    private LinkedList<HierarchyStepResult> hierarchyStepList = new LinkedList<HierarchyStepResult>();$/;"	f	class:HierarchyStepResult	file:	access:private
hostname	Entry.java	/^    public String hostname;$/;"	f	class:Entry	access:public
id	EntryProcessor.java	/^    public int id; \/\/ for test$/;"	f	class:EntryProcessor	access:public
idMap	EntryProcessorManager.java	/^    private Map<Integer, F>  idMap = new HashMap<Integer, F>(); $/;"	f	class:EntryProcessorManager	file:	access:private
init	ProcessChain.java	/^    public void init() {$/;"	m	class:ProcessChain	access:public	signature:()
interval	StepResult.java	/^    public long interval() {$/;"	m	class:StepResult	access:public	signature:()
list	Cache.java	/^    private List<T> list = new LinkedList<T>();$/;"	f	class:Cache	file:	access:private
logStream	FeedThread.java	/^    LogStream<Entry> logStream;$/;"	f	class:FeedThread	access:default
logStream	ProcessChain.java	/^    private LogStream<Entry>    logStream;$/;"	f	class:ProcessChain	file:	access:private
logStream	TestProcessChain.java	/^    static LogStream<Entry> logStream = new LogStream<Entry>();;$/;"	f	class:TestProcessChain	access:default
main	Test.java	/^    public static void main(String args[]) {$/;"	m	class:Test	access:public	signature:(String args[])
main	TestEP.java	/^    public static void main(String args[]) {$/;"	m	class:TestEP	access:public	signature:(String args[])
main	TestHierarchy.java	/^    public static void main(String args[]) {$/;"	m	class:TestHierarchy	access:public	signature:(String args[])
main	TestProcessChain.java	/^    public static void main(String args[]) {$/;"	m	class:TestProcessChain	access:public	signature:(String args[])
mainAAA	FakeLogFeedThread.java	/^    public static void mainAAA(String args[]) {$/;"	m	class:FakeLogFeedThread	access:public	signature:(String args[])
masterLogPath	FakeLogFeedThread.java	/^    String masterLogPath = "\/home\/wang\/work\/LPS\/LogProcess\/fakeServer\/res\/master.log";$/;"	f	class:FakeLogFeedThread	access:default
masterReader	FakeLogFeedThread.java	/^    BufferedReader masterReader;$/;"	f	class:FakeLogFeedThread	access:default
match	MatchFunction.java	/^    public boolean match(T t1, T t2);$/;"	m	interface:MatchFunction	access:public	signature:(T t1, T t2)
match	TestProcessChain.java	/^    public boolean match(Entry e1, Entry e2) {$/;"	m	class:MyMatch	access:public	signature:(Entry e1, Entry e2)
matchFunction	EntryProcessor.java	/^    private MatchFunction<Entry> matchFunction;$/;"	f	class:EntryProcessor	file:	access:private
matchFunction	ProcessChain.java	/^    private MatchFunction<Entry> matchFunction;$/;"	f	class:ProcessChain	file:	access:private
next	LogStream.java	/^    public T next() {$/;"	m	class:LogStream	access:public	signature:()
openLogFile	FakeLogFeedThread.java	/^    public void openLogFile() {$/;"	m	class:FakeLogFeedThread	access:public	signature:()
parseFrom	Entry.java	/^    public void parseFrom(String entryLine) {$/;"	m	class:Entry	access:public	signature:(String entryLine)
prefixTag	Entry.java	/^    public String prefixTag;$/;"	f	class:Entry	access:public
process	ProcessChain.java	/^    public void process() {$/;"	m	class:ProcessChain	access:public	signature:()
processID	Entry.java	/^    public String processID;$/;"	f	class:Entry	access:public
queue	LogStream.java	/^    private BlockingQueue<T> queue = new ArrayBlockingQueue<T>(1024);$/;"	f	class:LogStream	file:	access:private
receiveNew	LogStream.java	/^    public void receiveNew(T t) {$/;"	m	class:LogStream	access:public	signature:(T t)
receiveNewEntry	EntryProcessor.java	/^    public StepResult receiveNewEntry(Entry entry) {$/;"	m	class:EntryProcessor	access:public	signature:(Entry entry)
removeFilter	FilterChain.java	/^    public boolean removeFilter(Filter<T> filter) {$/;"	m	class:FilterChain	access:public	signature:(Filter<T> filter)
requestID	Entry.java	/^    private String requestID = "";$/;"	f	class:Entry	file:	access:private
resCount	EntryProcessor.java	/^    static int resCount = 0; \/\/ for test$/;"	f	class:EntryProcessor	access:default
run	FakeLogFeedThread.java	/^    public void run() {$/;"	m	class:FakeLogFeedThread	access:public	signature:()
run	FeedThread.java	/^    public void run() {$/;"	m	class:FeedThread	access:public	signature:()
sequenceNuber	EntryProcessorManager.java	/^    private static int sequenceNuber = 1;$/;"	f	class:EntryProcessorManager	file:	access:private
setCounter	Entry.java	/^    public void setCounter(String counter) {$/;"	m	class:Entry	access:public	signature:(String counter)
setEntryProcessorMananger	ProcessChain.java	/^    public void setEntryProcessorMananger(EntryProcessorManager<?> epManager) {$/;"	m	class:ProcessChain	access:public	signature:(EntryProcessorManager<?> epManager)
setGroupBy	EntryProcessorManager.java	/^    public void setGroupBy(GroupBy<Entry, F> groupBy) {$/;"	m	class:EntryProcessorManager	access:public	signature:(GroupBy<Entry, F> groupBy)
setLogStream	ProcessChain.java	/^    public void setLogStream(LogStream<Entry> logStream) {$/;"	m	class:ProcessChain	access:public	signature:(LogStream<Entry> logStream)
setMatchFunction	EntryProcessor.java	/^    public void setMatchFunction(MatchFunction<Entry> matchFunction) {$/;"	m	class:EntryProcessor	access:public	signature:(MatchFunction<Entry> matchFunction)
setMatchFunction	ProcessChain.java	/^    public void setMatchFunction(MatchFunction<Entry> myMatch) {$/;"	m	class:ProcessChain	access:public	signature:(MatchFunction<Entry> myMatch)
setRequestId	Entry.java	/^    public void setRequestId(String requestID) {$/;"	m	class:Entry	access:public	signature:(String requestID)
setTimestamp	Entry.java	/^    public void setTimestamp(long timestamp) {$/;"	m	class:Entry	access:public	signature:(long timestamp)
setTraceFlag	Entry.java	/^    public void setTraceFlag(int traceFlag) {$/;"	m	class:Entry	access:public	signature:(int traceFlag)
sqrtReader	FakeLogFeedThread.java	/^    BufferedReader sqrtReader;$/;"	f	class:FakeLogFeedThread	access:default
sqrtWorkerLogPath	FakeLogFeedThread.java	/^    String sqrtWorkerLogPath = "\/home\/wang\/work\/LPS\/LogProcess\/fakeServer\/res\/sqrtWorker.log";$/;"	f	class:FakeLogFeedThread	access:default
startTime	StepResult.java	/^    public long startTime;$/;"	f	class:StepResult	access:public
sumReader	FakeLogFeedThread.java	/^    BufferedReader sumReader;$/;"	f	class:FakeLogFeedThread	access:default
sumWorkerLogPath	FakeLogFeedThread.java	/^    String sumWorkerLogPath = "\/home\/wang\/work\/LPS\/LogProcess\/fakeServer\/res\/sumWorker.log";$/;"	f	class:FakeLogFeedThread	access:default
testEP	TestEP.java	/^    public static void testEP() {$/;"	m	class:TestEP	access:public	signature:()
testEPRandom	TestEP.java	/^    public static void testEPRandom() {$/;"	m	class:TestEP	access:public	signature:()
testMatch	TestEP.java	/^    public static void testMatch() {$/;"	m	class:TestEP	access:public	signature:()
testMatch	TestEP.java	/^    public static void testMatch(int i, int j) {$/;"	m	class:TestEP	access:public	signature:(int i, int j)
timestamp	Entry.java	/^    private long timestamp;$/;"	f	class:Entry	file:	access:private
toString	Entry.java	/^    public String toString() {$/;"	m	class:Entry	access:public	signature:()
toString	StepResult.java	/^    public String toString() {$/;"	m	class:StepResult	access:public	signature:()
topHierarchyStepResult	EntryProcessor.java	/^    private LinkedList<HierarchyStepResult> topHierarchyStepResult;$/;"	f	class:EntryProcessor	file:	access:private
traceFlag	Entry.java	/^    private int traceFlag;$/;"	f	class:Entry	file:	access:private
